{"version":3,"sources":["components/loader/styles.js","components/loader/LoaderGrowing.js","components/loader/LoaderSpinning.js","components/loader/index.js","pages/HiddenFooter/styles.js","pages/HiddenFooter/index.js","components/blurredSection/index.js","components/interactions/onScroll.js","components/layout/navbar/styles.js","components/layout/navbar/index.js","components/layout/base/index.js","pages/Main/styles.js","pages/Main/index.js","App.js","serviceWorker.js","fixtures/theme.js","index.js"],"names":["SvgInit","styled","svg","attrs","version","xmlns","xmlnsXlink","Svg","size","theme","color","accent","Grow","div","FullScreen","bg","Container","LoaderGrowing","className","LoaderSpinning","width","viewBox","cx","cy","fill","strokeWidth","r","Math","floor","CenteredSection","Ref","a","SocialRef","HiddenFooterPage","href","style","fontSize","target","Blur","src","blur","tint","BlurredSection","children","rest","visible","MDBNavbarBrand","NaviLink","navItems","Navbar","useState","open","setOpen","dark","scrolling","transparent","fixed","expand","onClick","isOpen","navbar","left","map","nav","i","key","BaseLayout","Wrapper","Banner","h1","Paragraph","p","FrontPage","MainPage","App","isLoading","setLoader","useEffect","document","readyState","Main","Boolean","window","location","hostname","match","white","black","primary","secondary","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6934b520.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const SvgInit = styled.svg.attrs({\r\n  version: '1.1',\r\n  xmlns: 'http://www.w3.org/2000/svg',\r\n  xmlnsXlink: 'http://www.w3.org/1999/xlink',\r\n})``\r\n\r\nexport const Svg = styled(SvgInit)`\r\n  width: ${({ size }) => size ? size : '50px'}; \r\n  height: ${({ size }) => size ? size : '50px'};\r\n  -webkit-animation: rotation 1.35s linear infinite;\r\n  animation: rotation 1.35s linear infinite;\r\n  stroke: ${({ theme, color }) => color ? theme.color[color] : theme.color.accent};\r\n\r\n  & .circle {\r\n    stroke-dasharray: 135;\r\n    stroke-dashoffset: 0;\r\n    stroke-linecap: round;\r\n    -webkit-transform-origin: center;\r\n    -ms-transform-origin: center;\r\n    transform-origin: center;\r\n    -webkit-animation: turn 1.35s ease-in-out infinite;\r\n    animation: turn 1.35s ease-in-out infinite;\r\n  }\r\n\r\n  @-webkit-keyframes rotation\r\n  {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      -webkit-transform: rotate(270deg);\r\n      transform: rotate(270deg);\r\n    }\r\n  }\r\n\r\n  @keyframes rotation\r\n  {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      -webkit-transform: rotate(270deg);\r\n      transform: rotate(270deg);\r\n    }\r\n  }\r\n\r\n  @-webkit-keyframes turn\r\n  {\r\n    0% {\r\n      stroke-dashoffset: 180;\r\n    }\r\n\r\n    50% {\r\n      stroke-dashoffset: 45;\r\n      -webkit-transform: rotate(135deg);\r\n      transform: rotate(135deg);\r\n    }\r\n\r\n    100% {\r\n      stroke-dashoffset: 180;\r\n      -webkit-transform: rotate(450deg);\r\n      transform: rotate(450deg);\r\n    }\r\n  }\r\n\r\n  @keyframes turn\r\n  {\r\n    0% {\r\n      stroke-dashoffset: 180;\r\n    }\r\n\r\n    50% {\r\n      stroke-dashoffset: 45;\r\n      -webkit-transform: rotate(135deg);\r\n      transform: rotate(135deg);\r\n    }\r\n\r\n    100% {\r\n      stroke-dashoffset: 180;\r\n      -webkit-transform: rotate(450deg);\r\n      transform: rotate(450deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport const Grow = styled.div`\r\n  & .spinner-grow {\r\n    background-color: ${({ theme, color }) => color ? theme.color[color] : theme.color.accent} !important;\r\n  }\r\n`\r\n\r\nexport const FullScreen = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  height: 100vh;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme }) => theme.color.bg};\r\n`\r\n\r\nexport const Container = styled.div`\r\n  width: 20vw;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n","import React from 'react'\r\nimport { Grow } from './styles'\r\n\r\nconst LoaderGrowing = ({ color }) => (\r\n  <Grow className='spinner-grow text-danger' color={color} />\r\n)\r\n\r\nexport default LoaderGrowing\r\n","import React from 'react'\r\nimport { Svg } from './styles'\r\n\r\nconst LoaderSpinning = ({ size, color, width }) => {\r\n  return (\r\n    <Svg viewBox={`0 0 ${size} ${size}`} color={color}>\r\n      <circle\r\n        className='circle'\r\n        cx={size ? size / 2 : 25}\r\n        cy={size ? size / 2 : 25}\r\n        fill='none'\r\n        strokeWidth={width ? width : 4}\r\n        r={size ? (Math.floor(size / 10) * 10) : 20}\r\n      />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default LoaderSpinning\r\n","import React from 'react'\r\nimport LoaderGrowing from './LoaderGrowing'\r\nimport LoaderSpinning from './LoaderSpinning'\r\nimport { FullScreen, Container } from './styles'\r\n\r\nconst FullscreenLoaderInit = () => {\r\n  return (\r\n    <FullScreen>\r\n      <Container>\r\n        <LoaderSpinning />\r\n        <LoaderGrowing />\r\n        <LoaderSpinning color='secondary' />\r\n        <LoaderGrowing />\r\n      </Container>\r\n    </FullScreen>\r\n  )\r\n}\r\n\r\nexport default {\r\n  FullscreenLoaderInit,\r\n  LoaderGrowing,\r\n  LoaderSpinning\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme }) => theme.color.accent};\r\n  color: #ffffff;\r\n  z-index: -99;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  & .heading {\r\n    font-family: 'Oswald';\r\n    font-weight: 400;\r\n  }\r\n\r\n  & .content {\r\n    font-family: 'Lato';\r\n  }\r\n\r\n  & .bold {\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nexport const CenteredSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport const Ref = styled.a`\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    opacity: 0.5;\r\n    transition: .2s;\r\n  }\r\n\r\n  &:visited {\r\n    color: #ffffff;\r\n  }\r\n`\r\n\r\nexport const SocialRef = styled(Ref)`\r\n  font-size: 30pt;\r\n  margin: 0 20px;  \r\n`\r\n","import React from 'react'\r\nimport {\r\n  IoLogoInstagram,\r\n  IoLogoLinkedin,\r\n  IoLogoTwitter,\r\n  IoLogoGithub,\r\n  IoLogoFlickr\r\n} from 'react-icons/io'\r\nimport { Container, CenteredSection, Ref, SocialRef } from './styles'\r\n\r\nconst HiddenFooterPage = () => {\r\n  return (\r\n    <Container>\r\n      <h2 className='heading mb-5'>Contact Me</h2>\r\n      <CenteredSection className='content'>\r\n        <div className='row text-center py-1'>Mobile : (+62) 857 1434 7565</div>\r\n        <div className='row text-center py-1'>\r\n          Email : <Ref href='mailto:hzbarkan@gmail.com'>&nbsp;hzbarkan@gmail.com</Ref>\r\n        </div>\r\n\r\n        <div className='row text-center pt-5 pb-2 heading' style={{ fontSize: 20 }}>Find Me:</div>\r\n        <div>\r\n          <SocialRef href='https://www.instagram.com/hzbarkan/' target='_blank'>\r\n            <IoLogoInstagram />\r\n          </SocialRef>\r\n          <SocialRef href='https://www.twitter.com/hzbarkan/' target='_blank'>\r\n            <IoLogoTwitter />\r\n          </SocialRef>\r\n          <SocialRef href='https://www.linkedin.com/in/hzbarkan/' target='_blank'>\r\n            <IoLogoLinkedin />\r\n          </SocialRef>\r\n          <SocialRef href='https://github.com/hzbarkan' target='_blank'>\r\n            <IoLogoGithub />\r\n          </SocialRef>\r\n          <SocialRef href='https://www.flickr.com/hzbarkan' target='_blank'>\r\n            <IoLogoFlickr />\r\n          </SocialRef>\r\n        </div>\r\n\r\n        <div className='row text-center pt-5 mt-3'>&#169; 2020 Haekal Zidni Barkan&emsp;|&emsp;hzbarkan.github.io</div>\r\n      </CenteredSection>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HiddenFooterPage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Blur = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n\r\n  & .inside {\r\n    position: relative;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0; left: 0;\r\n    width: 100%; height: 100%;\r\n    background-image: url(${({ src }) => src});\r\n    background-size: cover;\r\n    ${({ blur }) => `filter: blur(${blur ? blur : 5}px) grayscale(100%);`}\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0; left: 0;\r\n    width: 100%; height: 100%;\r\n    background: ${({ theme, tint }) => `${tint ? theme.color[tint] : theme.color.accent}80`}\r\n  }\r\n`\r\n\r\nexport const BlurredSection = ({ children, ...rest }) => (\r\n  <Blur {...rest}>\r\n    {children}\r\n  </Blur>\r\n)\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.div`\r\n  opacity: ${({ visible }) => visible ? 1 : 0};\r\n  transform: translateY(20vh);\r\n  visibility: ${({ visible }) => visible ? 'visible' : 'hidden'};\r\n  transition: opacity 0.6s ease-out, transform 1.2s ease-out;\r\n  will-change: opacity, visibility;\r\n`\r\n\r\nexport const ScrollSection = ({ children }) => {\r\n  const [isVisible, setVisible] = useState(true)\r\n  const domRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => setVisible(entry.isIntersecting))\r\n    })\r\n    observer.observe(domRef.current)\r\n    return () => observer.unobserve(domRef.current)\r\n  }, [])\r\n\r\n  return (\r\n    <Section visible={isVisible} ref={domRef}>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { MDBNavbarBrand } from 'mdbreact'\r\n\r\nexport const NavBrand = styled(MDBNavbarBrand)`\r\n  font-family: 'Oswald';\r\n  font-size: 20pt;\r\n  font-weight: 400;\r\n`\r\n\r\nexport const NaviLink = styled.a`\r\n  font-family: 'Oswald';\r\n  color: #ffffff !important;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  margin: 15px 15px;\r\n\r\n  &:hover {\r\n    color: #ffffff;\r\n    opacity: 0.5;\r\n    transition: .2s;\r\n  }\r\n\r\n  &:visited {\r\n    color: #ffffff;\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport { MDBNavbar, MDBNavbarNav, MDBCollapse, MDBNavbarToggler, MDBNavItem, MDBNavLink } from 'mdbreact'\r\nimport { NavBrand, NaviLink } from './styles'\r\n\r\nconst navItems = [\r\n  'Home',\r\n  'About me',\r\n  'Photoblog (TBA)'\r\n]\r\n\r\nconst Navbar = () => {\r\n  // state for showing side menu toggle\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <MDBNavbar dark scrolling transparent fixed='top' color='elegant-color-dark' expand='md'>\r\n      <MDBNavbarToggler onClick={() => setOpen(!open)} />\r\n      <MDBCollapse isOpen={open} navbar>\r\n        <MDBNavbarNav left>\r\n          {navItems.map((nav, i) => (\r\n            <NaviLink key={i}>{nav}</NaviLink>\r\n          ))}\r\n        </MDBNavbarNav>\r\n      </MDBCollapse>\r\n    </MDBNavbar>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport Navbar from '../navbar'\r\n\r\nconst BaseLayout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BaseLayout\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  /* height: 200vh;\r\n  width: 100%; */\r\n  margin-bottom: 100vh;\r\n  background-color: ${({ theme }) => theme.color.bg};\r\n`\r\n\r\nexport const Banner = styled.h1`\r\n  font-family: 'Oswald';\r\n  font-size: 100pt;\r\n  font-weight: 300;\r\n  color: white;\r\n`\r\n\r\nexport const Paragraph = styled.p`\r\n  font-family: 'Lato';\r\n  font-weight: 300;\r\n  color: white;\r\n  letter-spacing: .5px;\r\n`\r\n\r\nexport const FrontPage = styled.div.attrs({\r\n  className: 'row col-10 col-lg-9 offset-1 offset-lg-2'\r\n})`\r\n  padding-top: 10vh;\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 9;\r\n`\r\n","import React from 'react'\r\nimport HiddenPage from '../HiddenFooter'\r\nimport { BlurredSection } from '../../components'\r\nimport { ScrollSection } from '../../components/interactions'\r\nimport { BaseLayout } from '../../components/layout'\r\nimport * as Styles from './styles'\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <BaseLayout>\r\n      {/* main scrollview */}\r\n      <Styles.Wrapper>\r\n\r\n        {/* content sections */}\r\n        <BlurredSection src='https://live.staticflickr.com/65535/48138978536_99da5f61c5_b.jpg' blur='0'>\r\n          <div className='inside'>\r\n            <Styles.FrontPage>\r\n              <Styles.Banner>hzbarkan</Styles.Banner>\r\n              <Styles.Paragraph>\r\n                Web Developer&emsp;|&emsp;Seasonal Photographer&emsp;|&emsp;Aviation Enthusiast&emsp;|&emsp;Railway Enthusiast\r\n              </Styles.Paragraph>\r\n            </Styles.FrontPage>\r\n          </div>\r\n        </BlurredSection>\r\n\r\n      </Styles.Wrapper>\r\n\r\n      {/* hidden footer */}\r\n      <HiddenPage />\r\n    </BaseLayout>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport Loader from './components/loader'\r\nimport Main from './pages/Main'\r\n\r\nconst App = () => {\r\n  const [isLoading, setLoader] = useState(true)\r\n  useEffect(() => {\r\n    setLoader(document.readyState === 'complete')\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader.FullscreenLoaderInit />}\r\n      {!isLoading && <Main />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const color = {\r\n  white: '#ffffff',\r\n  black: '#000000',\r\n  accent: '#6e6ed3',\r\n  bg: '#200f21',\r\n  primary: '#241663',\r\n  secondary: '#a72693',\r\n}\r\n\r\nexport default { color }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Styled Components provider and theme injection\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './fixtures/theme'\r\n\r\n// MDB styles\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}